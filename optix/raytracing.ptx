//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30
.address_size 64

	// .globl	_Z13buffer_camerav
.global .align 4 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .f32 fov;
.global .align 16 .b8 diffuse[16];
.global .align 4 .u32 texCount;
.global .align 16 .b8 lightDir[16];
.global .align 16 .b8 lightPos[16];
.global .align 4 .b8 top_object[4];
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 index_buffer[1];
.global .align 1 .b8 normal[1];
.global .align 1 .b8 texCoord0[1];
.global .texref pos_buffer;
.global .texref tex0;
.global .align 1 .b8 output0[1];
.global .align 4 .b8 ray[36];
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 16 .b8 prdr[32];
.global .align 4 .f32 t_hit;
.global .align 4 .b8 texCoord[12];
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .u32 Phong;
.global .align 4 .u32 Shadow;
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3fovE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7diffuseE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texCountE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8lightDirE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8lightPosE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4prdrE[8] = {82, 97, 121, 0, 32, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texCoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5PhongE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6ShadowE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3fovE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename7diffuseE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8texCountE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8lightDirE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8lightPosE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4prdrE[17] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 82, 101, 115, 117, 108, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8texCoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename5PhongE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename6ShadowE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3fovE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7diffuseE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texCountE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8lightDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8lightPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4prdrE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texCoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5PhongE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6ShadowE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3fovE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7diffuseE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8texCountE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8lightDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8lightPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic4prdrE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic8texCoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5PhongE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6ShadowE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3fovE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7diffuseE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texCountE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8lightDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8lightPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4prdrE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texCoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5PhongE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6ShadowE[1];

.visible .entry _Z13buffer_camerav(

)
{
	.local .align 16 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<63>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<20>;


	mov.u64 	%rd19, __local_depot0;
	cvta.local.u64 	%SP, %rd19;
	ld.global.v2.u32 	{%r1, %r2}, [launch_index];
	cvt.rn.f32.u32	%f1, %r1;
	cvt.rn.f32.u32	%f2, %r2;
	tex.2d.v4.f32.f32	{%f3, %f4, %f5, %f6}, [pos_buffer, {%f1, %f2}];
	add.u64 	%rd3, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd3;
	mov.f32 	%f7, 0f3F800000;
	st.local.v4.f32 	[%rd1], {%f7, %f7, %f7, %f7};
	mov.u32 	%r5, 0;
	st.local.u32 	[%rd1+24], %r5;
	setp.lt.ftz.f32	%p1, %f6, 0f3F800000;
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_2:
	ld.global.v2.u32 	{%r25, %r26}, [launch_index];
	cvt.u64.u32	%rd14, %r25;
	cvt.u64.u32	%rd15, %r26;
	mov.u64 	%rd18, output0;
	cvta.global.u64 	%rd13, %rd18;
	mov.u32 	%r23, 2;
	mov.u32 	%r24, 16;
	mov.u64 	%rd17, 0;
	// inline asm
	call (%rd12), _rt_buffer_get_64, (%rd13, %r23, %r24, %rd14, %rd15, %rd17, %rd17);
	// inline asm
	mov.f32 	%f61, 0f00000000;
	st.v4.f32 	[%rd12], {%f7, %f7, %f7, %f61};
	bra.uni 	BB0_3;

BB0_1:
	ld.global.v2.u32 	{%r11, %r12}, [launch_index];
	cvt.rn.f32.u32	%f16, %r11;
	cvt.rn.f32.u32	%f17, %r12;
	ld.global.v2.u32 	{%r15, %r16}, [launch_dim];
	cvt.rn.f32.u32	%f18, %r15;
	cvt.rn.f32.u32	%f19, %r16;
	div.approx.ftz.f32 	%f20, %f16, %f18;
	div.approx.ftz.f32 	%f21, %f17, %f19;
	fma.rn.ftz.f32 	%f22, %f20, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f23, %f21, 0f40000000, 0fBF800000;
	ld.global.f32 	%f24, [U];
	mul.ftz.f32 	%f25, %f22, %f24;
	ld.global.f32 	%f26, [U+4];
	mul.ftz.f32 	%f27, %f22, %f26;
	ld.global.f32 	%f28, [U+8];
	mul.ftz.f32 	%f29, %f22, %f28;
	ld.global.f32 	%f30, [fov];
	ld.global.f32 	%f31, [V];
	mul.ftz.f32 	%f32, %f23, %f31;
	ld.global.f32 	%f33, [V+4];
	mul.ftz.f32 	%f34, %f23, %f33;
	ld.global.f32 	%f35, [V+8];
	mul.ftz.f32 	%f36, %f23, %f35;
	mul.ftz.f32 	%f37, %f32, %f30;
	mul.ftz.f32 	%f38, %f34, %f30;
	mul.ftz.f32 	%f39, %f36, %f30;
	fma.rn.ftz.f32 	%f40, %f25, %f30, %f37;
	fma.rn.ftz.f32 	%f41, %f27, %f30, %f38;
	fma.rn.ftz.f32 	%f42, %f29, %f30, %f39;
	ld.global.f32 	%f43, [W];
	add.ftz.f32 	%f44, %f43, %f40;
	ld.global.f32 	%f45, [W+4];
	add.ftz.f32 	%f46, %f41, %f45;
	ld.global.f32 	%f47, [W+8];
	add.ftz.f32 	%f48, %f42, %f47;
	mul.ftz.f32 	%f49, %f46, %f46;
	fma.rn.ftz.f32 	%f50, %f44, %f44, %f49;
	fma.rn.ftz.f32 	%f51, %f48, %f48, %f50;
	rsqrt.approx.ftz.f32 	%f52, %f51;
	mul.ftz.f32 	%f11, %f44, %f52;
	mul.ftz.f32 	%f12, %f46, %f52;
	mul.ftz.f32 	%f13, %f48, %f52;
	ld.global.u32 	%r7, [Phong];
	ld.global.f32 	%f10, [eye+8];
	ld.global.f32 	%f9, [eye+4];
	ld.global.f32 	%f8, [eye];
	ld.global.u32 	%r6, [top_object];
	mov.f32 	%f14, 0f2D2FEBFF;
	mov.f32 	%f15, 0f6C4ECB8F;
	mov.u32 	%r8, 32;
	// inline asm
	call _rt_trace_64, (%r6, %f8, %f9, %f10, %f11, %f12, %f13, %r7, %f14, %f15, %rd3, %r8);
	// inline asm
	ld.global.v2.u32 	{%r19, %r20}, [launch_index];
	cvt.u64.u32	%rd7, %r19;
	cvt.u64.u32	%rd8, %r20;
	mov.u64 	%rd11, output0;
	cvta.global.u64 	%rd6, %rd11;
	mov.u32 	%r9, 2;
	mov.u32 	%r10, 16;
	mov.u64 	%rd10, 0;
	// inline asm
	call (%rd5), _rt_buffer_get_64, (%rd6, %r9, %r10, %rd7, %rd8, %rd10, %rd10);
	// inline asm
	ld.local.v4.f32 	{%f53, %f54, %f55, %f56}, [%rd1];
	st.v4.f32 	[%rd5], {%f53, %f54, %f55, %f56};

BB0_3:
	ret;
}

	// .globl	_Z16buffer_camera_msv
.visible .entry _Z16buffer_camera_msv(

)
{
	.local .align 16 .b8 	__local_depot1[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .f32 	%f<107>;
	.reg .b32 	%r<217>;
	.reg .b64 	%rd<19>;


	mov.u64 	%rd18, __local_depot1;
	cvta.local.u64 	%SP, %rd18;
	ld.global.v2.u32 	{%r5, %r6}, [launch_index];
	cvt.rn.f32.u32	%f18, %r5;
	cvt.rn.f32.u32	%f19, %r6;
	tex.2d.v4.f32.f32	{%f20, %f21, %f22, %f23}, [pos_buffer, {%f18, %f19}];
	setp.lt.ftz.f32	%p1, %f23, 0f3F800000;
	@%p1 bra 	BB1_6;
	bra.uni 	BB1_1;

BB1_6:
	ld.global.v2.u32 	{%r209, %r210}, [launch_index];
	cvt.u64.u32	%rd13, %r209;
	cvt.u64.u32	%rd14, %r210;
	mov.u64 	%rd17, output0;
	cvta.global.u64 	%rd12, %rd17;
	mov.u32 	%r207, 2;
	mov.u32 	%r208, 16;
	mov.u64 	%rd16, 0;
	// inline asm
	call (%rd11), _rt_buffer_get_64, (%rd12, %r207, %r208, %rd13, %rd14, %rd16, %rd16);
	// inline asm
	mov.f32 	%f96, 0f00000000;
	mov.f32 	%f97, 0f3F800000;
	st.v4.f32 	[%rd11], {%f97, %f97, %f97, %f96};
	bra.uni 	BB1_7;

BB1_1:
	ld.global.v2.u32 	{%r10, %r11}, [launch_index];
	cvt.rn.f32.u32	%f28, %r10;
	cvt.rn.f32.u32	%f29, %r11;
	ld.global.v2.u32 	{%r14, %r15}, [launch_dim];
	cvt.rn.f32.u32	%f30, %r14;
	cvt.rn.f32.u32	%f31, %r15;
	div.approx.ftz.f32 	%f32, %f28, %f30;
	div.approx.ftz.f32 	%f33, %f29, %f31;
	fma.rn.ftz.f32 	%f1, %f32, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f2, %f33, 0f40000000, 0fBF800000;
	mul.ftz.f32 	%f34, %f30, 0f40800000;
	mul.ftz.f32 	%f35, %f31, 0f40800000;
	rcp.approx.ftz.f32 	%f3, %f34;
	rcp.approx.ftz.f32 	%f4, %f35;
	mov.f32 	%f103, 0f00000000;
	mov.u32 	%r9, 0;
	mov.u32 	%r215, %r9;
	mov.f32 	%f104, %f103;
	mov.f32 	%f105, %f103;
	mov.f32 	%f106, %f103;

BB1_2:
	mov.u32 	%r216, %r9;

BB1_3:
	add.s32 	%r213, %r215, 1;
	cvt.rn.f32.s32	%f98, %r213;
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd2;
	shl.b32 	%r22, %r216, 4;
	add.s32 	%r23, %r22, -1556008596;
	shr.u32 	%r24, %r216, 5;
	add.s32 	%r25, %r24, -939442524;
	add.s32 	%r26, %r216, -1640531527;
	xor.b32  	%r27, %r23, %r26;
	xor.b32  	%r28, %r27, %r25;
	add.s32 	%r29, %r28, %r215;
	shl.b32 	%r30, %r29, 4;
	add.s32 	%r31, %r30, -1383041155;
	add.s32 	%r32, %r29, -1640531527;
	xor.b32  	%r33, %r31, %r32;
	shr.u32 	%r34, %r29, 5;
	add.s32 	%r35, %r34, 2123724318;
	xor.b32  	%r36, %r33, %r35;
	add.s32 	%r37, %r36, %r216;
	shl.b32 	%r38, %r37, 4;
	add.s32 	%r39, %r38, -1556008596;
	add.s32 	%r40, %r37, 1013904242;
	shr.u32 	%r41, %r37, 5;
	add.s32 	%r42, %r41, -939442524;
	xor.b32  	%r43, %r39, %r40;
	xor.b32  	%r44, %r43, %r42;
	add.s32 	%r45, %r44, %r29;
	shl.b32 	%r46, %r45, 4;
	add.s32 	%r47, %r46, -1383041155;
	add.s32 	%r48, %r45, 1013904242;
	xor.b32  	%r49, %r47, %r48;
	shr.u32 	%r50, %r45, 5;
	add.s32 	%r51, %r50, 2123724318;
	xor.b32  	%r52, %r49, %r51;
	add.s32 	%r53, %r52, %r37;
	shl.b32 	%r54, %r53, 4;
	add.s32 	%r55, %r54, -1556008596;
	add.s32 	%r56, %r53, -626627285;
	shr.u32 	%r57, %r53, 5;
	add.s32 	%r58, %r57, -939442524;
	xor.b32  	%r59, %r55, %r56;
	xor.b32  	%r60, %r59, %r58;
	add.s32 	%r61, %r60, %r45;
	shl.b32 	%r62, %r61, 4;
	add.s32 	%r63, %r62, -1383041155;
	add.s32 	%r64, %r61, -626627285;
	xor.b32  	%r65, %r63, %r64;
	shr.u32 	%r66, %r61, 5;
	add.s32 	%r67, %r66, 2123724318;
	xor.b32  	%r68, %r65, %r67;
	add.s32 	%r69, %r68, %r53;
	shl.b32 	%r70, %r69, 4;
	add.s32 	%r71, %r70, -1556008596;
	add.s32 	%r72, %r69, 2027808484;
	shr.u32 	%r73, %r69, 5;
	add.s32 	%r74, %r73, -939442524;
	xor.b32  	%r75, %r71, %r72;
	xor.b32  	%r76, %r75, %r74;
	add.s32 	%r77, %r76, %r61;
	ld.global.u32 	%r78, [launch_index+4];
	mul.lo.s32 	%r79, %r78, %r77;
	shl.b32 	%r80, %r79, 4;
	add.s32 	%r81, %r80, -1556008596;
	add.s32 	%r82, %r79, -1640531527;
	shr.u32 	%r83, %r79, 5;
	add.s32 	%r84, %r83, -939442524;
	xor.b32  	%r85, %r81, %r82;
	xor.b32  	%r86, %r85, %r84;
	ld.global.v2.u32 	{%r87, %r88}, [launch_dim];
	mad.lo.s32 	%r90, %r87, %r77, %r86;
	shl.b32 	%r91, %r90, 4;
	add.s32 	%r92, %r91, -1383041155;
	add.s32 	%r93, %r90, -1640531527;
	xor.b32  	%r94, %r92, %r93;
	shr.u32 	%r95, %r90, 5;
	add.s32 	%r96, %r95, 2123724318;
	xor.b32  	%r97, %r94, %r96;
	add.s32 	%r98, %r97, %r79;
	shl.b32 	%r99, %r98, 4;
	add.s32 	%r100, %r99, -1556008596;
	add.s32 	%r101, %r98, 1013904242;
	shr.u32 	%r102, %r98, 5;
	add.s32 	%r103, %r102, -939442524;
	xor.b32  	%r104, %r100, %r101;
	xor.b32  	%r105, %r104, %r103;
	add.s32 	%r106, %r105, %r90;
	shl.b32 	%r107, %r106, 4;
	add.s32 	%r108, %r107, -1383041155;
	add.s32 	%r109, %r106, 1013904242;
	xor.b32  	%r110, %r108, %r109;
	shr.u32 	%r111, %r106, 5;
	add.s32 	%r112, %r111, 2123724318;
	xor.b32  	%r113, %r110, %r112;
	add.s32 	%r114, %r113, %r98;
	shl.b32 	%r115, %r114, 4;
	add.s32 	%r116, %r115, -1556008596;
	add.s32 	%r117, %r114, -626627285;
	shr.u32 	%r118, %r114, 5;
	add.s32 	%r119, %r118, -939442524;
	xor.b32  	%r120, %r116, %r117;
	xor.b32  	%r121, %r120, %r119;
	add.s32 	%r122, %r121, %r106;
	shl.b32 	%r123, %r122, 4;
	add.s32 	%r124, %r123, -1383041155;
	add.s32 	%r125, %r122, -626627285;
	xor.b32  	%r126, %r124, %r125;
	shr.u32 	%r127, %r122, 5;
	add.s32 	%r128, %r127, 2123724318;
	xor.b32  	%r129, %r126, %r128;
	add.s32 	%r130, %r129, %r114;
	shl.b32 	%r131, %r130, 4;
	add.s32 	%r132, %r131, -1556008596;
	add.s32 	%r133, %r130, 2027808484;
	shr.u32 	%r134, %r130, 5;
	add.s32 	%r135, %r134, -939442524;
	xor.b32  	%r136, %r132, %r133;
	xor.b32  	%r137, %r136, %r135;
	add.s32 	%r138, %r137, %r122;
	shl.b32 	%r140, %r138, 4;
	add.s32 	%r141, %r140, -1556008596;
	add.s32 	%r142, %r138, -1640531527;
	shr.u32 	%r143, %r138, 5;
	add.s32 	%r144, %r143, -939442524;
	xor.b32  	%r145, %r141, %r142;
	xor.b32  	%r146, %r145, %r144;
	mad.lo.s32 	%r147, %r88, %r87, %r146;
	shl.b32 	%r148, %r147, 4;
	add.s32 	%r149, %r148, -1383041155;
	add.s32 	%r150, %r147, -1640531527;
	xor.b32  	%r151, %r149, %r150;
	shr.u32 	%r152, %r147, 5;
	add.s32 	%r153, %r152, 2123724318;
	xor.b32  	%r154, %r151, %r153;
	add.s32 	%r155, %r154, %r138;
	shl.b32 	%r156, %r155, 4;
	add.s32 	%r157, %r156, -1556008596;
	add.s32 	%r158, %r155, 1013904242;
	shr.u32 	%r159, %r155, 5;
	add.s32 	%r160, %r159, -939442524;
	xor.b32  	%r161, %r157, %r158;
	xor.b32  	%r162, %r161, %r160;
	add.s32 	%r163, %r162, %r147;
	shl.b32 	%r164, %r163, 4;
	add.s32 	%r165, %r164, -1383041155;
	add.s32 	%r166, %r163, 1013904242;
	xor.b32  	%r167, %r165, %r166;
	shr.u32 	%r168, %r163, 5;
	add.s32 	%r169, %r168, 2123724318;
	xor.b32  	%r170, %r167, %r169;
	add.s32 	%r171, %r170, %r155;
	shl.b32 	%r172, %r171, 4;
	add.s32 	%r173, %r172, -1556008596;
	add.s32 	%r174, %r171, -626627285;
	shr.u32 	%r175, %r171, 5;
	add.s32 	%r176, %r175, -939442524;
	xor.b32  	%r177, %r173, %r174;
	xor.b32  	%r178, %r177, %r176;
	add.s32 	%r179, %r178, %r163;
	shl.b32 	%r180, %r179, 4;
	add.s32 	%r181, %r180, -1383041155;
	add.s32 	%r182, %r179, -626627285;
	xor.b32  	%r183, %r181, %r182;
	shr.u32 	%r184, %r179, 5;
	add.s32 	%r185, %r184, 2123724318;
	xor.b32  	%r186, %r183, %r185;
	add.s32 	%r187, %r186, %r171;
	shl.b32 	%r188, %r187, 4;
	add.s32 	%r189, %r188, -1556008596;
	add.s32 	%r190, %r187, 2027808484;
	shr.u32 	%r191, %r187, 5;
	add.s32 	%r192, %r191, -939442524;
	xor.b32  	%r193, %r189, %r190;
	xor.b32  	%r194, %r193, %r192;
	add.s32 	%r195, %r194, %r179;
	mad.lo.s32 	%r196, %r138, 1664525, 7271263;
	and.b32  	%r197, %r196, 16777215;
	cvt.rn.f32.u32	%f44, %r197;
	mov.f32 	%f45, 0f4B800000;
	div.approx.ftz.f32 	%f46, %f44, %f45;
	mul.ftz.f32 	%f47, %f98, %f46;
	add.s32 	%r216, %r216, 1;
	cvt.rn.f32.s32	%f48, %r216;
	mad.lo.s32 	%r198, %r195, 1664525, 7271263;
	and.b32  	%r199, %r198, 16777215;
	cvt.rn.f32.u32	%f49, %r199;
	div.approx.ftz.f32 	%f50, %f49, %f45;
	mul.ftz.f32 	%f51, %f48, %f50;
	fma.rn.ftz.f32 	%f52, %f3, %f47, %f1;
	fma.rn.ftz.f32 	%f53, %f4, %f51, %f2;
	ld.global.f32 	%f54, [U];
	mul.ftz.f32 	%f55, %f54, %f52;
	ld.global.f32 	%f56, [U+4];
	mul.ftz.f32 	%f57, %f52, %f56;
	ld.global.f32 	%f58, [U+8];
	mul.ftz.f32 	%f59, %f52, %f58;
	ld.global.f32 	%f60, [fov];
	ld.global.f32 	%f61, [V];
	mul.ftz.f32 	%f62, %f53, %f61;
	ld.global.f32 	%f63, [V+4];
	mul.ftz.f32 	%f64, %f53, %f63;
	ld.global.f32 	%f65, [V+8];
	mul.ftz.f32 	%f66, %f53, %f65;
	mul.ftz.f32 	%f67, %f62, %f60;
	mul.ftz.f32 	%f68, %f64, %f60;
	mul.ftz.f32 	%f69, %f66, %f60;
	fma.rn.ftz.f32 	%f70, %f55, %f60, %f67;
	fma.rn.ftz.f32 	%f71, %f57, %f60, %f68;
	fma.rn.ftz.f32 	%f72, %f59, %f60, %f69;
	ld.global.f32 	%f73, [W];
	add.ftz.f32 	%f74, %f73, %f70;
	ld.global.f32 	%f75, [W+4];
	add.ftz.f32 	%f76, %f71, %f75;
	ld.global.f32 	%f77, [W+8];
	add.ftz.f32 	%f78, %f72, %f77;
	mul.ftz.f32 	%f79, %f76, %f76;
	fma.rn.ftz.f32 	%f80, %f74, %f74, %f79;
	fma.rn.ftz.f32 	%f81, %f78, %f78, %f80;
	rsqrt.approx.ftz.f32 	%f82, %f81;
	mul.ftz.f32 	%f39, %f74, %f82;
	mul.ftz.f32 	%f40, %f76, %f82;
	mul.ftz.f32 	%f41, %f78, %f82;
	ld.global.u32 	%r20, [Phong];
	ld.global.f32 	%f38, [eye+8];
	ld.global.f32 	%f37, [eye+4];
	ld.global.f32 	%f36, [eye];
	mov.f32 	%f83, 0f3F800000;
	st.local.v4.f32 	[%rd3], {%f83, %f83, %f83, %f83};
	st.local.u32 	[%rd3+24], %r9;
	ld.global.u32 	%r19, [top_object];
	mov.f32 	%f42, 0f3089705F;
	mov.f32 	%f43, 0f6C4ECB8F;
	mov.u32 	%r21, 32;
	// inline asm
	call _rt_trace_64, (%r19, %f36, %f37, %f38, %f39, %f40, %f41, %r20, %f42, %f43, %rd2, %r21);
	// inline asm
	ld.local.v4.f32 	{%f84, %f85, %f86, %f87}, [%rd3];
	add.ftz.f32 	%f106, %f106, %f84;
	add.ftz.f32 	%f105, %f105, %f85;
	add.ftz.f32 	%f104, %f104, %f86;
	add.ftz.f32 	%f103, %f103, %f87;
	setp.ne.s32	%p2, %r216, 4;
	@%p2 bra 	BB1_3;

	add.s32 	%r215, %r215, 1;
	setp.lt.s32	%p3, %r215, 4;
	@%p3 bra 	BB1_2;

	ld.global.v2.u32 	{%r203, %r204}, [launch_index];
	cvt.u64.u32	%rd6, %r203;
	cvt.u64.u32	%rd7, %r204;
	mov.u64 	%rd10, output0;
	cvta.global.u64 	%rd5, %rd10;
	mov.u32 	%r201, 2;
	mov.u32 	%r202, 16;
	mov.u64 	%rd9, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r201, %r202, %rd6, %rd7, %rd9, %rd9);
	// inline asm
	mul.ftz.f32 	%f92, %f103, 0f3D800000;
	mul.ftz.f32 	%f93, %f104, 0f3D800000;
	mul.ftz.f32 	%f94, %f105, 0f3D800000;
	mul.ftz.f32 	%f95, %f106, 0f3D800000;
	st.v4.f32 	[%rd4], {%f95, %f94, %f93, %f92};

BB1_7:
	ret;
}

	// .globl	_Z14any_hit_shadowv
.visible .entry _Z14any_hit_shadowv(

)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 0;
	st.global.u32 	[prdr+20], %r1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z15keepGoingShadowv
.visible .entry _Z15keepGoingShadowv(

)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<2>;


	ld.global.u8 	%rs1, [prdr+16];
	setp.ne.s16	%p1, %rs1, 0;
	@%p1 bra 	BB3_2;

	ld.global.f32 	%f1, [t_hit];
	setp.neu.ftz.f32	%p2, %f1, 0f00000000;
	selp.u16	%rs2, 1, 0, %p2;
	st.global.u8 	[prdr+16], %rs2;

BB3_2:
	mov.u32 	%r1, 1056964608;
	st.global.u32 	[prdr+20], %r1;
	// inline asm
	call _rt_ignore_intersection, ();
	// inline asm
	ret;
}

	// .globl	_Z9keepGoingv
.visible .entry _Z9keepGoingv(

)
{
	.reg .f32 	%f<13>;


	ld.global.v4.f32 	{%f1, %f2, %f3, %f4}, [prdr];
	mul.ftz.f32 	%f6, %f4, 0f3F666666;
	mul.ftz.f32 	%f8, %f3, 0f3F666666;
	mul.ftz.f32 	%f10, %f2, 0f3F666666;
	mul.ftz.f32 	%f12, %f1, 0f3F666666;
	st.global.v4.f32 	[prdr], {%f12, %f10, %f8, %f6};
	// inline asm
	call _rt_ignore_intersection, ();
	// inline asm
	ret;
}

	// .globl	_Z5shadev
.visible .entry _Z5shadev(

)
{
	.local .align 16 .b8 	__local_depot5[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .f32 	%f<87>;
	.reg .b32 	%r<7>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<7>;


	mov.u64 	%rd6, __local_depot5;
	cvta.local.u64 	%SP, %rd6;
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd2;
	add.s64 	%rd1, %rd3, 20;
	mov.u32 	%r2, 1065353216;
	st.local.u32 	[%rd3+20], %r2;
	ld.global.v4.f32 	{%f23, %f24, %f25, %f26}, [lightDir];
	neg.ftz.f32 	%f1, %f23;
	neg.ftz.f32 	%f2, %f24;
	neg.ftz.f32 	%f3, %f25;
	ld.global.f32 	%f19, [shading_normal];
	ld.global.f32 	%f20, [shading_normal+4];
	ld.global.f32 	%f21, [shading_normal+8];
	mov.u32 	%r1, 7937;
	mov.f32 	%f22, 0f00000000;
	// inline asm
	call (%f15, %f16, %f17, %f18), _rt_transform_tuple, (%r1, %f19, %f20, %f21, %f22);
	// inline asm
	mul.ftz.f32 	%f30, %f16, %f16;
	fma.rn.ftz.f32 	%f31, %f15, %f15, %f30;
	fma.rn.ftz.f32 	%f32, %f17, %f17, %f31;
	rsqrt.approx.ftz.f32 	%f33, %f32;
	mul.ftz.f32 	%f34, %f15, %f33;
	mul.ftz.f32 	%f35, %f16, %f33;
	mul.ftz.f32 	%f36, %f17, %f33;
	mul.ftz.f32 	%f37, %f34, %f1;
	mul.ftz.f32 	%f38, %f35, %f24;
	sub.ftz.f32 	%f39, %f37, %f38;
	mul.ftz.f32 	%f40, %f36, %f25;
	sub.ftz.f32 	%f41, %f39, %f40;
	max.ftz.f32 	%f4, %f22, %f41;
	setp.leu.ftz.f32	%p1, %f4, 0f00000000;
	@%p1 bra 	BB5_2;

	ld.global.f32 	%f50, [t_hit];
	ld.global.f32 	%f51, [ray+12];
	ld.global.f32 	%f52, [ray+16];
	ld.global.f32 	%f53, [ray+20];
	ld.global.f32 	%f54, [ray];
	fma.rn.ftz.f32 	%f42, %f50, %f51, %f54;
	ld.global.f32 	%f55, [ray+4];
	fma.rn.ftz.f32 	%f43, %f50, %f52, %f55;
	ld.global.f32 	%f56, [ray+8];
	fma.rn.ftz.f32 	%f44, %f50, %f53, %f56;
	ld.global.u32 	%r4, [Shadow];
	ld.global.u32 	%r3, [top_object];
	mov.f32 	%f48, 0f3A83126F;
	mov.f32 	%f49, 0f6C4ECB8F;
	mov.u32 	%r5, 32;
	// inline asm
	call _rt_trace_64, (%r3, %f42, %f43, %f44, %f1, %f2, %f3, %r4, %f48, %f49, %rd2, %r5);
	// inline asm

BB5_2:
	ld.local.f32 	%f57, [%rd1];
	mul.ftz.f32 	%f5, %f4, %f57;
	ld.global.v4.f32 	{%f58, %f59, %f60, %f61}, [diffuse];
	mul.ftz.f32 	%f84, %f58, 0f3FA66666;
	mul.ftz.f32 	%f85, %f59, 0f3FA66666;
	mul.ftz.f32 	%f86, %f60, 0f3FA66666;
	ld.global.u32 	%r6, [texCount];
	setp.lt.s32	%p2, %r6, 1;
	@%p2 bra 	BB5_4;

	ld.global.f32 	%f65, [texCoord];
	ld.global.f32 	%f66, [texCoord+4];
	tex.2d.v4.f32.f32	{%f67, %f68, %f69, %f70}, [tex0, {%f65, %f66}];
	mul.ftz.f32 	%f84, %f84, %f67;
	mul.ftz.f32 	%f85, %f85, %f68;
	mul.ftz.f32 	%f86, %f86, %f69;

BB5_4:
	cvt.ftz.f64.f32	%fd1, %f5;
	add.f64 	%fd2, %fd1, 0d3FD3333333333333;
	cvt.ftz.f64.f32	%fd3, %f84;
	mul.f64 	%fd4, %fd2, %fd3;
	cvt.rn.ftz.f32.f64	%f71, %fd4;
	cvt.ftz.f64.f32	%fd5, %f85;
	mul.f64 	%fd6, %fd2, %fd5;
	cvt.rn.ftz.f32.f64	%f72, %fd6;
	cvt.ftz.f64.f32	%fd7, %f86;
	mul.f64 	%fd8, %fd2, %fd7;
	cvt.rn.ftz.f32.f64	%f73, %fd8;
	ld.global.v4.f32 	{%f74, %f75, %f76, %f77}, [prdr];
	mul.ftz.f32 	%f79, %f75, %f72;
	mul.ftz.f32 	%f81, %f74, %f71;
	st.global.v2.f32 	[prdr], {%f81, %f79};
	mul.ftz.f32 	%f83, %f76, %f73;
	st.global.f32 	[prdr+8], %f83;
	ret;
}

	// .globl	_Z15shadePointLightv
.visible .entry _Z15shadePointLightv(

)
{
	.local .align 16 .b8 	__local_depot6[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<96>;
	.reg .b32 	%r<7>;
	.reg .f64 	%fd<11>;
	.reg .b64 	%rd<7>;


	mov.u64 	%rd6, __local_depot6;
	cvta.local.u64 	%SP, %rd6;
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd2;
	add.s64 	%rd1, %rd3, 20;
	mov.u32 	%r2, 1065353216;
	st.local.u32 	[%rd3+20], %r2;
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd3+16], %rs1;
	ld.global.f32 	%f23, [shading_normal];
	ld.global.f32 	%f24, [shading_normal+4];
	ld.global.f32 	%f25, [shading_normal+8];
	mov.u32 	%r1, 7937;
	mov.f32 	%f26, 0f00000000;
	// inline asm
	call (%f19, %f20, %f21, %f22), _rt_transform_tuple, (%r1, %f23, %f24, %f25, %f26);
	// inline asm
	mul.ftz.f32 	%f27, %f20, %f20;
	fma.rn.ftz.f32 	%f28, %f19, %f19, %f27;
	fma.rn.ftz.f32 	%f29, %f21, %f21, %f28;
	rsqrt.approx.ftz.f32 	%f30, %f29;
	mul.ftz.f32 	%f31, %f19, %f30;
	mul.ftz.f32 	%f32, %f20, %f30;
	mul.ftz.f32 	%f33, %f21, %f30;
	ld.global.f32 	%f34, [ray+12];
	ld.global.f32 	%f35, [t_hit];
	ld.global.f32 	%f36, [ray+16];
	ld.global.f32 	%f37, [ray+20];
	ld.global.f32 	%f38, [ray];
	fma.rn.ftz.f32 	%f1, %f35, %f34, %f38;
	ld.global.f32 	%f39, [ray+4];
	fma.rn.ftz.f32 	%f2, %f35, %f36, %f39;
	ld.global.f32 	%f40, [ray+8];
	fma.rn.ftz.f32 	%f3, %f35, %f37, %f40;
	ld.global.v4.f32 	{%f41, %f42, %f43, %f44}, [lightPos];
	sub.ftz.f32 	%f46, %f41, %f1;
	sub.ftz.f32 	%f48, %f42, %f2;
	sub.ftz.f32 	%f50, %f43, %f3;
	mul.ftz.f32 	%f51, %f48, %f48;
	fma.rn.ftz.f32 	%f52, %f46, %f46, %f51;
	fma.rn.ftz.f32 	%f53, %f50, %f50, %f52;
	sqrt.approx.ftz.f32 	%f4, %f53;
	rsqrt.approx.ftz.f32 	%f54, %f53;
	mul.ftz.f32 	%f5, %f46, %f54;
	mul.ftz.f32 	%f6, %f48, %f54;
	mul.ftz.f32 	%f7, %f50, %f54;
	mul.ftz.f32 	%f55, %f32, %f6;
	fma.rn.ftz.f32 	%f56, %f31, %f5, %f55;
	fma.rn.ftz.f32 	%f57, %f33, %f7, %f56;
	max.ftz.f32 	%f8, %f26, %f57;
	setp.leu.ftz.f32	%p1, %f8, 0f00000000;
	@%p1 bra 	BB6_2;

	ld.global.u32 	%r4, [Shadow];
	cvt.ftz.f64.f32	%fd1, %f4;
	add.f64 	%fd2, %fd1, 0d3F847AE147AE147B;
	cvt.rn.ftz.f32.f64	%f65, %fd2;
	ld.global.u32 	%r3, [top_object];
	mov.f32 	%f64, 0f360637BD;
	mov.u32 	%r5, 32;
	// inline asm
	call _rt_trace_64, (%r3, %f1, %f2, %f3, %f5, %f6, %f7, %r4, %f64, %f65, %rd2, %r5);
	// inline asm

BB6_2:
	ld.local.f32 	%f66, [%rd1];
	mul.ftz.f32 	%f9, %f8, %f66;
	ld.global.v4.f32 	{%f67, %f68, %f69, %f70}, [diffuse];
	mul.ftz.f32 	%f93, %f67, 0f3FA66666;
	mul.ftz.f32 	%f94, %f68, 0f3FA66666;
	mul.ftz.f32 	%f95, %f69, 0f3FA66666;
	ld.global.u32 	%r6, [texCount];
	setp.lt.s32	%p2, %r6, 1;
	@%p2 bra 	BB6_4;

	ld.global.f32 	%f74, [texCoord];
	ld.global.f32 	%f75, [texCoord+4];
	tex.2d.v4.f32.f32	{%f76, %f77, %f78, %f79}, [tex0, {%f74, %f75}];
	mul.ftz.f32 	%f93, %f93, %f76;
	mul.ftz.f32 	%f94, %f94, %f77;
	mul.ftz.f32 	%f95, %f95, %f78;

BB6_4:
	cvt.ftz.f64.f32	%fd3, %f9;
	add.f64 	%fd4, %fd3, 0d3FD3333333333333;
	cvt.ftz.f64.f32	%fd5, %f93;
	mul.f64 	%fd6, %fd4, %fd5;
	cvt.rn.ftz.f32.f64	%f80, %fd6;
	cvt.ftz.f64.f32	%fd7, %f94;
	mul.f64 	%fd8, %fd4, %fd7;
	cvt.rn.ftz.f32.f64	%f81, %fd8;
	cvt.ftz.f64.f32	%fd9, %f95;
	mul.f64 	%fd10, %fd4, %fd9;
	cvt.rn.ftz.f32.f64	%f82, %fd10;
	ld.global.v4.f32 	{%f83, %f84, %f85, %f86}, [prdr];
	mul.ftz.f32 	%f88, %f84, %f81;
	mul.ftz.f32 	%f90, %f83, %f80;
	st.global.v2.f32 	[prdr], {%f90, %f88};
	mul.ftz.f32 	%f92, %f85, %f82;
	st.global.f32 	[prdr+8], %f92;
	ret;
}

	// .globl	_Z11shade_glassv
.visible .entry _Z11shade_glassv(

)
{
	.local .align 16 .b8 	__local_depot7[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<53>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<4>;


	mov.u64 	%rd3, __local_depot7;
	cvta.local.u64 	%SP, %rd3;
	ld.global.u32 	%r1, [prdr+24];
	setp.gt.s32	%p1, %r1, 3;
	@%p1 bra 	BB7_2;

	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd1;
	ld.global.f32 	%f5, [shading_normal];
	ld.global.f32 	%f6, [shading_normal+4];
	ld.global.f32 	%f7, [shading_normal+8];
	mov.u32 	%r2, 7937;
	mov.f32 	%f8, 0f00000000;
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_transform_tuple, (%r2, %f5, %f6, %f7, %f8);
	// inline asm
	mul.ftz.f32 	%f17, %f2, %f2;
	fma.rn.ftz.f32 	%f18, %f1, %f1, %f17;
	fma.rn.ftz.f32 	%f19, %f3, %f3, %f18;
	rsqrt.approx.ftz.f32 	%f20, %f19;
	mul.ftz.f32 	%f21, %f1, %f20;
	mul.ftz.f32 	%f22, %f2, %f20;
	mul.ftz.f32 	%f23, %f3, %f20;
	ld.global.f32 	%f24, [ray+12];
	ld.global.f32 	%f25, [t_hit];
	ld.global.f32 	%f26, [ray+16];
	ld.global.f32 	%f27, [ray+20];
	ld.global.f32 	%f28, [ray];
	fma.rn.ftz.f32 	%f9, %f25, %f24, %f28;
	ld.global.f32 	%f29, [ray+4];
	fma.rn.ftz.f32 	%f10, %f25, %f26, %f29;
	ld.global.f32 	%f30, [ray+8];
	fma.rn.ftz.f32 	%f11, %f25, %f27, %f30;
	add.ftz.f32 	%f31, %f21, %f21;
	add.ftz.f32 	%f32, %f22, %f22;
	add.ftz.f32 	%f33, %f23, %f23;
	mul.ftz.f32 	%f34, %f22, %f26;
	fma.rn.ftz.f32 	%f35, %f21, %f24, %f34;
	fma.rn.ftz.f32 	%f36, %f23, %f27, %f35;
	mul.ftz.f32 	%f37, %f31, %f36;
	mul.ftz.f32 	%f38, %f32, %f36;
	mul.ftz.f32 	%f39, %f33, %f36;
	sub.ftz.f32 	%f12, %f24, %f37;
	sub.ftz.f32 	%f13, %f26, %f38;
	sub.ftz.f32 	%f14, %f27, %f39;
	ld.global.u32 	%r4, [Phong];
	mov.f32 	%f40, 0f3F800000;
	st.local.v4.f32 	[%rd2], {%f40, %f40, %f40, %f40};
	ld.global.u32 	%r6, [prdr+24];
	add.s32 	%r7, %r6, 1;
	st.local.u32 	[%rd2+24], %r7;
	ld.global.u32 	%r3, [top_object];
	mov.f32 	%f15, 0f360637BD;
	mov.f32 	%f16, 0f6C4ECB8F;
	mov.u32 	%r5, 32;
	// inline asm
	call _rt_trace_64, (%r3, %f9, %f10, %f11, %f12, %f13, %f14, %r4, %f15, %f16, %rd1, %r5);
	// inline asm
	ld.local.v4.f32 	{%f41, %f42, %f43, %f44}, [%rd2];
	mul.ftz.f32 	%f49, %f44, 0f3F000000;
	mul.ftz.f32 	%f50, %f43, 0f3F000000;
	mul.ftz.f32 	%f51, %f42, 0f3F000000;
	mul.ftz.f32 	%f52, %f41, 0f3F000000;
	st.global.v4.f32 	[prdr], {%f52, %f51, %f50, %f49};

BB7_2:
	ret;
}

	// .globl	_Z10shadeLightv
.visible .entry _Z10shadeLightv(

)
{
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f3F800000;
	st.global.v4.f32 	[prdr], {%f1, %f1, %f1, %f1};
	ret;
}

	// .globl	_Z6shadowv
.visible .entry _Z6shadowv(

)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 0;
	st.global.u32 	[prdr+20], %r1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.reg .f32 	%f<3>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.global.v2.u32 	{%r3, %r4}, [launch_index];
	cvt.u64.u32	%rd3, %r3;
	cvt.u64.u32	%rd4, %r4;
	mov.u64 	%rd7, output0;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 16;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	mov.f32 	%f1, 0f00000000;
	mov.f32 	%f2, 0f3F800000;
	st.v4.f32 	[%rd1], {%f2, %f1, %f1, %f2};
	ret;
}

	// .globl	_Z4missv
.visible .entry _Z4missv(

)
{
	.reg .f32 	%f<3>;


	mov.f32 	%f1, 0f00000000;
	mov.f32 	%f2, 0f3F800000;
	st.global.v4.f32 	[prdr], {%f2, %f2, %f2, %f1};
	ret;
}

	// .globl	_Z10missShadowv
.visible .entry _Z10missShadowv(

)
{
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f3F800000;
	st.global.v4.f32 	[prdr], {%f1, %f1, %f1, %f1};
	ret;
}

	// .globl	_Z10alpha_testv
.visible .entry _Z10alpha_testv(

)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<2>;


	ld.global.f32 	%f1, [texCoord];
	ld.global.f32 	%f2, [texCoord+4];
	tex.2d.v4.f32.f32	{%f3, %f4, %f5, %f6}, [tex0, {%f1, %f2}];
	setp.geu.ftz.f32	%p1, %f6, 0f3E800000;
	@%p1 bra 	BB13_2;

	// inline asm
	call _rt_ignore_intersection, ();
	// inline asm

BB13_2:
	ret;
}

	// .globl	_Z17alpha_test_shadowv
.visible .entry _Z17alpha_test_shadowv(

)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.global.f32 	%f1, [texCoord];
	ld.global.f32 	%f2, [texCoord+4];
	tex.2d.v4.f32.f32	{%f3, %f4, %f5, %f6}, [tex0, {%f1, %f2}];
	setp.lt.ftz.f32	%p1, %f6, 0f3E800000;
	@%p1 bra 	BB14_2;
	bra.uni 	BB14_1;

BB14_2:
	// inline asm
	call _rt_ignore_intersection, ();
	// inline asm
	bra.uni 	BB14_3;

BB14_1:
	mov.u32 	%r1, 0;
	st.global.u32 	[prdr+20], %r1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm

BB14_3:
	ret;
}

	// .globl	_Z20geometryintersectioni
.visible .entry _Z20geometryintersectioni(
	.param .u32 _Z20geometryintersectioni_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<152>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<117>;


	ld.param.u32 	%r13, [_Z20geometryintersectioni_param_0];
	mul.lo.s32 	%r14, %r13, 3;
	cvt.s64.s32	%rd6, %r14;
	mov.u64 	%rd40, index_buffer;
	cvta.global.u64 	%rd5, %rd40;
	mov.u32 	%r11, 1;
	mov.u32 	%r10, 4;
	mov.u64 	%rd39, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd6, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd12, [%rd4];
	mov.u64 	%rd41, vertex_buffer;
	cvta.global.u64 	%rd11, %rd41;
	mov.u32 	%r12, 16;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd12, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f7, %f8, %f9, %f10}, [%rd10];
	add.s32 	%r15, %r14, 1;
	cvt.s64.s32	%rd18, %r15;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd18, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd24, [%rd16];
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd24, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f14, %f15, %f16, %f17}, [%rd22];
	add.s32 	%r16, %r14, 2;
	cvt.s64.s32	%rd30, %r16;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd30, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd36, [%rd28];
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd36, %rd39, %rd39, %rd39);
	// inline asm
	sub.ftz.f32 	%f21, %f14, %f7;
	sub.ftz.f32 	%f22, %f15, %f8;
	sub.ftz.f32 	%f23, %f16, %f9;
	ld.v4.f32 	{%f24, %f25, %f26, %f27}, [%rd34];
	sub.ftz.f32 	%f31, %f7, %f24;
	sub.ftz.f32 	%f32, %f8, %f25;
	sub.ftz.f32 	%f33, %f9, %f26;
	mul.ftz.f32 	%f34, %f23, %f32;
	mul.ftz.f32 	%f35, %f22, %f33;
	sub.ftz.f32 	%f1, %f34, %f35;
	mul.ftz.f32 	%f36, %f21, %f33;
	mul.ftz.f32 	%f37, %f23, %f31;
	sub.ftz.f32 	%f2, %f36, %f37;
	mul.ftz.f32 	%f38, %f22, %f31;
	mul.ftz.f32 	%f39, %f21, %f32;
	sub.ftz.f32 	%f3, %f38, %f39;
	ld.global.f32 	%f40, [ray+12];
	ld.global.f32 	%f41, [ray+16];
	mul.ftz.f32 	%f42, %f41, %f2;
	fma.rn.ftz.f32 	%f43, %f40, %f1, %f42;
	ld.global.f32 	%f44, [ray+20];
	fma.rn.ftz.f32 	%f45, %f44, %f3, %f43;
	rcp.approx.ftz.f32 	%f46, %f45;
	ld.global.f32 	%f47, [ray];
	sub.ftz.f32 	%f48, %f7, %f47;
	ld.global.f32 	%f49, [ray+4];
	sub.ftz.f32 	%f50, %f8, %f49;
	ld.global.f32 	%f51, [ray+8];
	sub.ftz.f32 	%f52, %f9, %f51;
	mul.ftz.f32 	%f53, %f46, %f48;
	mul.ftz.f32 	%f54, %f46, %f50;
	mul.ftz.f32 	%f55, %f46, %f52;
	mul.ftz.f32 	%f56, %f41, %f55;
	mul.ftz.f32 	%f57, %f54, %f44;
	sub.ftz.f32 	%f58, %f56, %f57;
	mul.ftz.f32 	%f59, %f53, %f44;
	mul.ftz.f32 	%f60, %f55, %f40;
	sub.ftz.f32 	%f61, %f59, %f60;
	mul.ftz.f32 	%f62, %f54, %f40;
	mul.ftz.f32 	%f63, %f53, %f41;
	sub.ftz.f32 	%f64, %f62, %f63;
	mul.ftz.f32 	%f65, %f32, %f61;
	fma.rn.ftz.f32 	%f66, %f31, %f58, %f65;
	fma.rn.ftz.f32 	%f4, %f33, %f64, %f66;
	mul.ftz.f32 	%f67, %f22, %f61;
	fma.rn.ftz.f32 	%f68, %f21, %f58, %f67;
	fma.rn.ftz.f32 	%f5, %f23, %f64, %f68;
	mul.ftz.f32 	%f69, %f2, %f54;
	fma.rn.ftz.f32 	%f70, %f1, %f53, %f69;
	fma.rn.ftz.f32 	%f6, %f3, %f55, %f70;
	ld.global.f32 	%f71, [ray+32];
	setp.lt.ftz.f32	%p1, %f6, %f71;
	ld.global.f32 	%f72, [ray+28];
	setp.gt.ftz.f32	%p2, %f6, %f72;
	and.pred  	%p3, %p1, %p2;
	setp.ge.ftz.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.ftz.f32	%p6, %f5, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.ftz.f32 	%f73, %f4, %f5;
	setp.le.ftz.f32	%p8, %f73, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB15_3;
	bra.uni 	BB15_1;

BB15_1:
	// inline asm
	call (%r17), _rt_potential_intersection, (%f6);
	// inline asm
	setp.eq.s32	%p10, %r17, 0;
	@%p10 bra 	BB15_3;

	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd6, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd50, [%rd42];
	mov.u64 	%rd115, normal;
	cvta.global.u64 	%rd49, %rd115;
	// inline asm
	call (%rd48), _rt_buffer_get_64, (%rd49, %r11, %r12, %rd50, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f75, %f76, %f77, %f78}, [%rd48];
	// inline asm
	call (%rd54), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd18, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd62, [%rd54];
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd49, %r11, %r12, %rd62, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f82, %f83, %f84, %f85}, [%rd60];
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd30, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd74, [%rd66];
	// inline asm
	call (%rd72), _rt_buffer_get_64, (%rd49, %r11, %r12, %rd74, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f89, %f90, %f91, %f92}, [%rd72];
	// inline asm
	call (%rd78), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd6, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd86, [%rd78];
	mov.u64 	%rd116, texCoord0;
	cvta.global.u64 	%rd85, %rd116;
	// inline asm
	call (%rd84), _rt_buffer_get_64, (%rd85, %r11, %r12, %rd86, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f96, %f97, %f98, %f99}, [%rd84];
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd18, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd98, [%rd90];
	// inline asm
	call (%rd96), _rt_buffer_get_64, (%rd85, %r11, %r12, %rd98, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f103, %f104, %f105, %f106}, [%rd96];
	// inline asm
	call (%rd102), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd30, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd110, [%rd102];
	// inline asm
	call (%rd108), _rt_buffer_get_64, (%rd85, %r11, %r12, %rd110, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f110, %f111, %f112, %f113}, [%rd108];
	mov.f32 	%f117, 0f3F800000;
	sub.ftz.f32 	%f118, %f117, %f4;
	sub.ftz.f32 	%f119, %f118, %f5;
	mul.ftz.f32 	%f120, %f4, %f82;
	mul.ftz.f32 	%f121, %f4, %f83;
	mul.ftz.f32 	%f122, %f4, %f84;
	fma.rn.ftz.f32 	%f123, %f119, %f75, %f120;
	fma.rn.ftz.f32 	%f124, %f119, %f76, %f121;
	fma.rn.ftz.f32 	%f125, %f119, %f77, %f122;
	fma.rn.ftz.f32 	%f126, %f5, %f89, %f123;
	fma.rn.ftz.f32 	%f127, %f5, %f90, %f124;
	fma.rn.ftz.f32 	%f128, %f5, %f91, %f125;
	mul.ftz.f32 	%f129, %f127, %f127;
	fma.rn.ftz.f32 	%f130, %f126, %f126, %f129;
	fma.rn.ftz.f32 	%f131, %f128, %f128, %f130;
	rsqrt.approx.ftz.f32 	%f132, %f131;
	mul.ftz.f32 	%f133, %f126, %f132;
	mul.ftz.f32 	%f134, %f127, %f132;
	mul.ftz.f32 	%f135, %f128, %f132;
	st.global.f32 	[shading_normal], %f133;
	st.global.f32 	[shading_normal+4], %f134;
	st.global.f32 	[shading_normal+8], %f135;
	mul.ftz.f32 	%f136, %f4, %f103;
	mul.ftz.f32 	%f137, %f4, %f104;
	mul.ftz.f32 	%f138, %f4, %f105;
	fma.rn.ftz.f32 	%f139, %f119, %f96, %f136;
	fma.rn.ftz.f32 	%f140, %f119, %f97, %f137;
	fma.rn.ftz.f32 	%f141, %f119, %f98, %f138;
	fma.rn.ftz.f32 	%f142, %f5, %f110, %f139;
	fma.rn.ftz.f32 	%f143, %f5, %f111, %f140;
	fma.rn.ftz.f32 	%f144, %f5, %f112, %f141;
	st.global.f32 	[texCoord], %f142;
	st.global.f32 	[texCoord+4], %f143;
	st.global.f32 	[texCoord+8], %f144;
	mul.ftz.f32 	%f145, %f2, %f2;
	fma.rn.ftz.f32 	%f146, %f1, %f1, %f145;
	fma.rn.ftz.f32 	%f147, %f3, %f3, %f146;
	rsqrt.approx.ftz.f32 	%f148, %f147;
	mul.ftz.f32 	%f149, %f1, %f148;
	mul.ftz.f32 	%f150, %f2, %f148;
	mul.ftz.f32 	%f151, %f3, %f148;
	st.global.f32 	[geometric_normal], %f149;
	st.global.f32 	[geometric_normal+4], %f150;
	st.global.f32 	[geometric_normal+8], %f151;
	mov.u32 	%r43, 0;
	// inline asm
	call (%r42), _rt_report_intersection, (%r43);
	// inline asm

BB15_3:
	ret;
}

	// .globl	_Z11boundingboxiPf
.visible .entry _Z11boundingboxiPf(
	.param .u32 _Z11boundingboxiPf_param_0,
	.param .u64 _Z11boundingboxiPf_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<54>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<42>;


	ld.param.u32 	%r13, [_Z11boundingboxiPf_param_0];
	ld.param.u64 	%rd3, [_Z11boundingboxiPf_param_1];
	mul.lo.s32 	%r14, %r13, 3;
	cvt.s64.s32	%rd6, %r14;
	mov.u64 	%rd40, index_buffer;
	cvta.global.u64 	%rd5, %rd40;
	mov.u32 	%r11, 1;
	mov.u32 	%r10, 4;
	mov.u64 	%rd39, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd6, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd12, [%rd4];
	mov.u64 	%rd41, vertex_buffer;
	cvta.global.u64 	%rd11, %rd41;
	mov.u32 	%r12, 16;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd12, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f11, %f12, %f13, %f14}, [%rd10];
	add.s32 	%r15, %r14, 1;
	cvt.s64.s32	%rd18, %r15;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd18, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd24, [%rd16];
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd24, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f15, %f16, %f17, %f18}, [%rd22];
	add.s32 	%r16, %r14, 2;
	cvt.s64.s32	%rd30, %r16;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd30, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd36, [%rd28];
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd36, %rd39, %rd39, %rd39);
	// inline asm
	sub.ftz.f32 	%f19, %f15, %f11;
	sub.ftz.f32 	%f20, %f16, %f12;
	sub.ftz.f32 	%f21, %f17, %f13;
	ld.v4.f32 	{%f22, %f23, %f24, %f25}, [%rd34];
	sub.ftz.f32 	%f26, %f22, %f11;
	sub.ftz.f32 	%f27, %f23, %f12;
	sub.ftz.f32 	%f28, %f24, %f13;
	mul.ftz.f32 	%f29, %f20, %f28;
	mul.ftz.f32 	%f30, %f21, %f27;
	sub.ftz.f32 	%f31, %f29, %f30;
	mul.ftz.f32 	%f32, %f21, %f26;
	mul.ftz.f32 	%f33, %f19, %f28;
	sub.ftz.f32 	%f34, %f32, %f33;
	mul.ftz.f32 	%f35, %f19, %f27;
	mul.ftz.f32 	%f36, %f20, %f26;
	sub.ftz.f32 	%f37, %f35, %f36;
	mul.ftz.f32 	%f38, %f34, %f34;
	fma.rn.ftz.f32 	%f39, %f31, %f31, %f38;
	fma.rn.ftz.f32 	%f40, %f37, %f37, %f39;
	sqrt.approx.ftz.f32 	%f10, %f40;
	mov.pred 	%p5, 0;
	setp.leu.ftz.f32	%p4, %f10, 0f00000000;
	@%p4 bra 	BB16_2;

	abs.ftz.f32 	%f41, %f10;
	setp.neu.ftz.f32	%p5, %f41, 0f7F800000;

BB16_2:
	cvta.to.global.u64 	%rd2, %rd3;
	@%p5 bra 	BB16_4;
	bra.uni 	BB16_3;

BB16_4:
	min.ftz.f32 	%f42, %f11, %f15;
	min.ftz.f32 	%f43, %f42, %f22;
	min.ftz.f32 	%f44, %f12, %f16;
	min.ftz.f32 	%f45, %f44, %f23;
	min.ftz.f32 	%f46, %f13, %f17;
	min.ftz.f32 	%f47, %f46, %f24;
	st.global.f32 	[%rd2], %f43;
	st.global.f32 	[%rd2+4], %f45;
	st.global.f32 	[%rd2+8], %f47;
	max.ftz.f32 	%f48, %f11, %f15;
	max.ftz.f32 	%f49, %f48, %f22;
	max.ftz.f32 	%f50, %f12, %f16;
	max.ftz.f32 	%f51, %f50, %f23;
	max.ftz.f32 	%f52, %f13, %f17;
	max.ftz.f32 	%f53, %f52, %f24;
	st.global.f32 	[%rd2+12], %f49;
	st.global.f32 	[%rd2+16], %f51;
	st.global.f32 	[%rd2+20], %f53;
	bra.uni 	BB16_5;

BB16_3:
	mov.u32 	%r17, 2096152002;
	st.global.u32 	[%rd2+8], %r17;
	st.global.u32 	[%rd2+4], %r17;
	st.global.u32 	[%rd2], %r17;
	mov.u32 	%r18, -51331646;
	st.global.u32 	[%rd2+20], %r18;
	st.global.u32 	[%rd2+16], %r18;
	st.global.u32 	[%rd2+12], %r18;

BB16_5:
	ret;
}


